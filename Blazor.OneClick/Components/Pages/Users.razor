@page "/users/{id}"
@inject IStringLocalizer<Users> localize
@inject PostgreDbContext _postgreDb
@inject ApplicationDbContext _context


@using Blazor.OneClick.Components.Pages.Shared.AppUsers
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Localization
@using global::OneClick.Data.Data

@if (id == "all")
{
    <PageTitle>@localize["Users"] | CopyTrader</PageTitle>

    <AllUsers />
}
else
{
    <PageTitle>@localize["User"] | CopyTrader</PageTitle>

    <User Id="@id" localize="localize"/>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery] public string? id { get; set; }

    private bool _isLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }


        //var postgreUsers = _postgreDb.Users;
       //  var projects =await _context.Projects.AsNoTracking().ToListAsync();
       //  for (int i = 1; i < projects.Count; i++)
       //  {
       //      projects[i].CreateDate = ConvertDateToUtc(projects[i].CreateDate);
       //      projects[i].StartEngineDate = ConvertDateToUtc(projects[i].StartEngineDate);
       //      projects[i].StopEngineDate = ConvertDateToUtc(projects[i].StopEngineDate);
       //      projects[i].LastPing = ConvertDateToUtc(projects[i].LastPing);

       //      _postgreDb.Projects.Add(projects[i]);
       //  }
        

       // try
       //  {
            
       //      _postgreDb.SaveChanges();
       //  }
       //  catch (Exception ex)
       //  {

       //  }



    }

    private DateTime ConvertDateToUtc(DateTime date)
    {
        var newDate = new DateTime(date.Year, date.Month, date.Day, date.Hour, date.Minute, date.Second, kind: DateTimeKind.Utc);
        return newDate;
    }
}
